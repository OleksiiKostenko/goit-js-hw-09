{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAsCA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC7BC,YAAW,WACHN,GACNI,EAAQ,CAAEN,WAAUC,UAEtBM,EAAO,CAAEP,WAAUC,S,GACjBA,E,KA7CS,CACXQ,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAG3B,SAAsBC,GACpBA,EAAEC,iBAEF,IAEmBC,EAAfF,EAAEG,cADHC,SAAYC,EAAKH,EAALd,MAAOkB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAIxBC,EAAkBC,OAAOJ,EAAMK,OAC/BC,EAAiBF,OAAOH,EAAKI,OAC7BE,EAAmBH,OAAOF,EAAOG,OAErCG,QAAQC,IAAK,UAAgCC,OAAtBV,EAAMK,MAAM,YAAiCK,OAAvBT,EAAKI,MAAM,cAAyBK,OAAbR,EAAOG,MAAM,OAEjF,IAAK,IAAIM,EAAI,EAAGA,GAAKJ,EAAkBI,GAAM,EAC7C9B,EAAc8B,EAAGR,GAChBS,MAAK,SAAAC,G,IAAG/B,EAAQ+B,EAAR/B,SAAUC,EAAK8B,EAAL9B,MACjBJ,EAAAmC,OAAOC,QAAQ,uBAAwCL,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAE9DiC,OAAM,SAAAH,G,IAAG/B,EAAQ+B,EAAR/B,SAAUC,EAAK8B,EAAL9B,MAClBJ,EAAAmC,OAAOG,QAAQ,sBAAqCP,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAE1DoB,GAAmBG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const  {\n     elements: { delay, step, amount }\n  } = e.currentTarget;\n\n\n  let inputDelayValue = Number(delay.value);\n  let inputStepValue = Number(step.value);\n  let inputAmountValue = Number(amount.value);\n\n  console.log( `delay: ${delay.value}, step: ${step.value}, amount: ${amount.value}  `);\n  \n  for (let i = 1; i <= inputAmountValue; i  += 1) {\n  createPromise(i, inputDelayValue)\n  .then(({ position, delay }) => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    inputDelayValue += inputStepValue;\n  }\n\n};\n\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n  setTimeout(() => {\n      if (shouldResolve) {\n    resolve({ position, delay });\n  }\n  reject({ position, delay })\n  },delay)\n  });\n};"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","form","document","querySelector","addEventListener","e","preventDefault","_elements","currentTarget","elements","delay1","step","amount","inputDelayValue","Number","value","inputStepValue","inputAmountValue","console","log","concat","i","then","param","Notify","success","catch","failure"],"version":3,"file":"03-promises.4c6e6619.js.map"}